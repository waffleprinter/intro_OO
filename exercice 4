"""
Jacques-Conrad Calagui-Painchaud, 405
TP4 - exercice 4
Programme qui fait un objet "Hero" avec plusieurs attributs. Permet l'héro d'attaquer et de prendre du dommage. Le
programme nous laisse aussi voir si l'héro est encore en vie.
"""
import random


class Hero:
    def __init__(self, name):
        self.name = name
        self.health = random.randint(1, 10) + random.randint(1, 10)
        self.attack_strength = random.randint(1, 6)
        self.defence_strength = random.randint(1, 6)

    def attack(self):
        """
        Calcul le la force de l'attque de l'héro. Ceci est en fonction de son attack_strength et le résultat d'un dé
        à six faces.

        :return: Le nombre de dommage que le hero fera.
        """
        attack_damage = random.randint(1, 6) + self.attack_strength
        return attack_damage

    def take_damage(self, adversary_attack_damage):
        """
        Calcul le nombre de vie que l'héro a, après avoir été attaqué par un adversaire.

        :param adversary_attack_damage: Le force de l'attaque de l'adversaire.
        :return: None
        """
        self.health -= adversary_attack_damage - self.defence_strength

    def is_alive(self):
        """
        Regarde si l'héro est encore en vie.

        :return: Si l'héro est encore en vie sous forme de True ou False.
        """
        return self.health > 0


hero = Hero("Arthur")
hero.take_damage(15)

print(f"{hero.name} attacks! They do {hero.attack()} damage!")
print(f"{hero.name} takes damage! They now have {hero.health} health!")
print(f"Is {hero.name} is alive? {hero.is_alive()}")

